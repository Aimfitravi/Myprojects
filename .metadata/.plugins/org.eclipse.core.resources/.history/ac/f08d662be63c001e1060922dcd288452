package com.shopx.controller;

import java.io.IOException;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.shopx.dto.ProductRequestDTO;
import com.shopx.entities.Product;
import com.shopx.service.ImageHandlingService;
import com.shopx.service.ProductService;

@RestController
@RequestMapping("/product")
public class ProductController {
	
	private static final String IMAGE_GIF_VALUE = MediaType.IMAGE_GIF_VALUE;
	private static final String IMAGE_JPEG_VALUE = MediaType.IMAGE_JPEG_VALUE;
	private static final String IMAGE_PNG_VALUE = MediaType.IMAGE_PNG_VALUE;

	@Autowired
	private ProductService productService;
	
	@Autowired
	private ImageHandlingService imageService;
	
	@PostMapping
	public ResponseEntity<?> addNewProduct(@RequestBody 
			@Valid ProductRequestDTO product) throws IOException
	{
		Product newProduct = productService.addNewProduct(product);
		
		return ResponseEntity.status(HttpStatus.CREATED)
				.body(newProduct);
	}
	
	@PostMapping(value="/{empId}/image",consumes = "multipart/form-data")
	public ResponseEntity<?> uploadEmpImge(@PathVariable Long empId, 
			@RequestParam MultipartFile imageFile) throws IOException
	{
		System.out.println("in image upload"+empId);
		return ResponseEntity.status(HttpStatus.CREATED).
				body(imageService.uploadImage(empId, imageFile));
	}
	
	//get all products
	@GetMapping
	public ResponseEntity<?> getAllProducts()
	{
		return ResponseEntity.status(HttpStatus.OK).body(productService.getAllProducts());
	}
	
	//get product by id
	@GetMapping("/{prodId}")
	public Product getProductById(@PathVariable Long prodId)
	{
		Product prod= productService.getProductById(prodId).orElseThrow();
		return prod;
	}
	
	//get product image by id
	@GetMapping(value = "/{prodId}/image", produces = { IMAGE_GIF_VALUE, 
			IMAGE_JPEG_VALUE, IMAGE_PNG_VALUE })
	public ResponseEntity<?> downloadEmpImage(@PathVariable Long prodId) throws IOException {
		System.out.println("in img download " + prodId);
		return ResponseEntity.ok(imageService.downloadImage(prodId));
	}
}
