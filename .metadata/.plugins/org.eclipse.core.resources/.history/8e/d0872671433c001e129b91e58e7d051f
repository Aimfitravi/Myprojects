package com.shopx.entities;

import java.time.LocalDate;
import java.util.ArrayList;

import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

public class ShoppingCart extends BaseEntity{
	private int totalItems;
	private double totalCartPrice;
	@CreationTimestamp
	private LocalDate createdOn;
	@UpdateTimestamp
	private LocalDate updatedOn;
	// Cart HAS-A Customer : uni dir asso between Cart 1----->1 Customer (owning side) : so LAZY should work ! I confirmed : using debugger : show User proxy
	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_id") // FK constraint
	private Customer cartOwner;

	// Cart HAS-A CartItems : bi dir asso between Cart 1---->* CartItem
	@OneToMany(mappedBy = "myCart", cascade = CascadeType.ALL, orphanRemoval = true/* ,fetch = FetchType.EAGER */)
	private List<CartItem> cartItems = new ArrayList<>();

}
